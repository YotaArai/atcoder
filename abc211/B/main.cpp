#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

const string YES = "Yes";
const string NO = "No";

void solve(std::vector<std::string> S)
{
    bool result1 = (*find(S.begin(), S.end(), "H")) == "H";
    bool result2 = (*find(S.begin(), S.end(), "2B")) == "2B";
    bool result3 = (*find(S.begin(), S.end(), "3B")) == "3B";
    bool result4 = (*find(S.begin(), S.end(), "HR")) == "HR";
    // auto result2 = find(S.begin(), S.end(), "2B");
    // auto result3 = find(S.begin(), S.end(), "3B");
    // auto result4 = find(S.begin(), S.end(), "HR");
    // cout << *result1 << *result2 << *result3 << *result4;

    // if (*result1 != "H" || *result2 != "2B" || *result3 != "3B" || *result4 != "HR")
    // {
    //     cout << NO << endl;
    // }
    //
    // else
    // {
    //     cout << YES << endl;
    // }

    if (result1 && result2 && result3 && result4)
    {
        cout << YES << endl;
    }
    else
    {
        cout << NO << endl;
    }
}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    std::vector<std::string> S(4);
    for (int i = 0; i < 4; i++)
    {
        std::cin >> S[i];
    }
    solve(std::move(S));
    return 0;
}
