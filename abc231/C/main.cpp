#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

void solve(long long N, long long Q, std::vector<long long> A, std::vector<long long> x)
{
	sort(begin(A), end(A));
	for (int i = 0; i < Q; i++)
	{
		auto itr = lower_bound(A.begin(), A.end(), x[i]);
		cout << N - (itr - A.begin()) << endl;
	}
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long N;
	std::scanf("%lld", &N);
	long long Q;
	std::scanf("%lld", &Q);
	std::vector<long long> A(N);
	for (int i = 0; i < N; i++)
	{
		std::scanf("%lld", &A[i]);
	}
	std::vector<long long> x(Q);
	for (int i = 0; i < Q; i++)
	{
		std::scanf("%lld", &x[i]);
	}
	solve(N, Q, std::move(A), std::move(x));
	return 0;
}
