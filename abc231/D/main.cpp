#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <atcoder/dsu>
using namespace std;
typedef long long ll;

const string YES = "Yes";
const string NO = "No";

void solve(long long N, long long M, vector<ll> A, vector<ll> B)
{
	atcoder::dsu uf(N);
	vector<ll> C(N);

	for (int i = 0; i < M; i++)
	{
		int a, b;
		a = A[i] - 1;
		b = B[i] - 1;
		if (uf.same(a, b))
		{
			cout << NO << endl;
			return;
		}
		uf.merge(a, b);

		C[a]++;
		C[b]++;
	}

	for (int i = 0; i < N; i++)
	{
		if (C[i] >= 3)
		{
			cout << NO << endl;
			return;
		}
	}
	cout << YES << endl;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long N;
	std::scanf("%lld", &N);
	long long M;
	std::scanf("%lld", &M);
	std::vector<long long> A(M);
	std::vector<long long> B(M);
	for (int i = 0; i < M * 2; i++)
	{
		std::scanf("%lld", &A[i]);
		std::scanf("%lld", &B[i]);
	}
	solve(N, M, std::move(A), std::move(B));
	return 0;
}
