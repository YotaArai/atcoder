#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

void solve(long long N, long long M, std::vector<long long> A)
{
	vector<ll> ans;
	vector<ll> x(100001);

	for (int i = 0; i < N; i++)
	{
		x[A[i]] = true;
	}

	vector<ll> d;
	for (int i = 2; i < 100001; i++)
	{
		bool flag = false;
		for (int j = i; j < 100001; j += i)
		{

			if (x[j])
			{
				flag = true;
			}
		}
		if (flag)
		{
			d.push_back(i);
		}
	}

	// for (int i = 0; i < d.size(); i++)
	// {
	// 	cout << d[i] << endl;
	// }

	vector<bool> ok(M + 1, true);
	for (int i : d)
	{
		for (int j = i; j <= M; j += i)
		{
			ok[j] = false;
		}
	}

	for (int i = 1; i <= M; i++)
	{
		if (ok[i])
		{
			ans.push_back(i);
		}
	}

	cout << size(ans) << endl;
	for (int i = 0; i < (int)size(ans); i++)
	{
		cout << ans[i] << endl;
	}
}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long N;
	std::scanf("%lld", &N);
	long long M;
	std::scanf("%lld", &M);
	std::vector<long long> A(N);
	for (int i = 0; i < N; i++)
	{
		std::scanf("%lld", &A[i]);
	}
	solve(N, M, std::move(A));
	return 0;
}
