#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <atcoder/dsu>
using namespace std;
typedef long long ll;

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	// Failed to predict input format
	long long N, Q;
	std::scanf("%lld %lld", &N, &Q);

	ll nil = -1;
	vector<ll> front(N + 1, nil);
	vector<ll> back(N + 1, nil);

	atcoder::dsu dsu(N);
	int queue_num, x, y;
	for (int i = 0; i < Q; i++)
	{
		cin >> queue_num;
		if (queue_num == 1)
		{
			cin >> x >> y;
			back[x] = y;
			front[y] = x;
		}
		else if (queue_num == 2)
		{
			cin >> x >> y;
			back[x] = nil;
			front[y] = nil;
		}
		else
		{
			cin >> x;
			while (front[x] != nil)
			{
				x = front[x]; // xの連結成分の、先頭に移動
			}
			vector<ll> ans;
			while (x != nil)
			{
				ans.push_back(x);
				x = back[x];
			}
			cout << ans.size() << " ";
			for (ll i = 0; i <= (int)ans.size() - 1; i++)
			{
				cout << ans[i];
				if (i != (int)ans.size() - 1)
					cout << " ";
				else
					cout << endl;
			}
		}
	}
	return 0;
}
