#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <climits>
using namespace std;
typedef long long ll;

pair<ll, ll> arr[100001];

void solve(long long N, long long M, std::vector<long long> a, std::vector<long long> b)
{

	for (int i = 0; i < N; i++)
	{
		arr[i] = {0, -1};
	}
	for (int i = 0; i < M; i++)
	{
		if (a[i] > b[i])
		{
			arr[a[i] - 1] = {arr[a[i] - 1].first + 1, b[i] - 1};
		}
		else if (a[i] < b[i])
		{
			arr[b[i] - 1] = {arr[b[i] - 1].first + 1, a[i] - 1};
		}
	}

	ll ans = 0;
	for (auto [cnt, connect] : arr)
	{
		if (cnt == 1)
		{
			ans++;
		}
	}
	cout << ans << endl;
}

// Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long N;
	std::scanf("%lld", &N);
	long long M;
	std::scanf("%lld", &M);
	std::vector<long long> a(M);
	std::vector<long long> b(M);
	for (int i = 0; i < M; i++)
	{
		std::scanf("%lld", &a[i]);
		std::scanf("%lld", &b[i]);
	}
	solve(N, M, std::move(a), std::move(b));
	return 0;
}
