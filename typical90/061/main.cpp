#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

void solve(long long Q, std::vector<long long> t, std::vector<long long> x)
{
	vector<ll> deck;

	for (int i = 0; i < Q; i++)
	{
		if (t[i] == 1)
		{
			// auto it = deck.begin();
			deck.insert(deck.begin(), x[i]);
		}
		else if (t[i] == 2)
		{
			deck.push_back(x[i]);
		}
		else
		{
			cout << deck[x[i] - 1] << endl;
		}
	}
}

// Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long Q;
	std::scanf("%lld", &Q);
	std::vector<long long> t(Q);
	std::vector<long long> x(Q);
	for (int i = 0; i < Q; i++)
	{
		std::scanf("%lld", &t[i]);
		std::scanf("%lld", &x[i]);
	}
	solve(Q, std::move(t), std::move(x));
	return 0;
}
