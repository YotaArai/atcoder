#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

const long long MOD = 7;

void solve(long long N, long long P, long long Q, std::vector<long long> A)
{
    int cnt = 0;

    for (int i = 0; i < N; ++i)
    {
        for (int j = 0; j < i; ++j)
        {
            for (int k = 0; k < j; ++k)
            {
                for (int l = 0; l < k; ++l)
                {
                    for (int m = 0; m < l; ++m)
                    {
                        if (1LL * A[i] * A[j] % P * A[k] % P * A[l] % P * A[m] % P == Q)
                        {
                            cnt++;
                        }
                    }
                }
            }
        }
    }
    cout << cnt << endl;
}

// Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    std::scanf("%lld", &N);
    long long P;
    std::scanf("%lld", &P);
    long long Q;
    std::scanf("%lld", &Q);
    std::vector<long long> A(N);
    for (int i = 0; i < N; i++)
    {
        std::scanf("%lld", &A[i]);
    }
    solve(N, P, Q, std::move(A));
    return 0;
}
