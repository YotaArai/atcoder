#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

map<ll, ll> ansmap;
vector<ll> b;

void solve(long long N, long long K, std::vector<long long> a)
{
	ll every, mod, cnt = 0;
	every = K / N;
	mod = K % N;

	for (int i = 0; i < N; i++)
	{
		ansmap[a[i]] = every;
		b.push_back(a[i]);
	}

	sort(a.begin(), a.end());

	for (ll i = 0; i < mod; i++)
	{
		ansmap[a[i]]++;
	}

	for (ll i = 0; i < N; i++)
	{
		cout << ansmap[b[i]] << endl;
	}
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long N;
	std::scanf("%lld", &N);
	long long K;
	std::scanf("%lld", &K);
	std::vector<long long> a(N);
	for (int i = 0; i < N; i++)
	{
		std::scanf("%lld", &a[i]);
	}
	solve(N, K, std::move(a));
	return 0;
}
