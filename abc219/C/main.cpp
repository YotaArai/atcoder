#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;


void solve(std::string X, long long N, std::vector<std::string> S){
	vector<pair<string, string>> Stmp;
	for(int i = 0; i < N; i++){
		string NameTmp = "";
		for(int j = 0; j < S[i].size(); j++){
			int char_poisition;
			for(int k = 0; k < X.size(); k++){
				if(X[k] == S[i][j]){
					char_poisition = k;
					break;
				}
			}
			NameTmp += char(char_poisition + 97);
		}
		// cout << NameTmp << endl;

		Stmp.push_back({NameTmp, S[i]});
	}
	sort(Stmp.begin(), Stmp.end());
	for(int i = 0; i < N; i++){
		cout << Stmp[i].second << endl;
	}
}

// Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
				std::string X;
				std::cin >> X;
				long long N;
				std::scanf("%lld", &N);
				std::vector<std::string> S(N);
				for(int i = 0 ; i < N ; i++){
								std::cin >> S[i];
				}
				solve(X, N, std::move(S));
				return 0;
}
