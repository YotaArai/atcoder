#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

vector<ll> compress(vector<ll> arr)
{
	int n = arr.size();
	map<ll, ll> mp;
	for (int i = 0; i < n; i++)
	{
		mp[arr[i]] = 0;
	}
	ll id = 1;
	for (auto &p : mp)
	{
		// cout << p.first << ", " << p.second << endl;
		p.second = id;
		id++;
	}
	for (int i = 0; i < n; i++)
	{
		// cout << mp[arr[i]] << endl;
		arr[i] = mp[arr[i]];
	}

	return arr;
}

void solve(long long H, long long W, long long N, std::vector<long long> A, std::vector<long long> B)
{
	A = compress(A);
	B = compress(B);

	for (int i = 0; i < N; i++)
	{
		cout << A[i] << " " << B[i] << endl;
	}
}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long H;
	std::scanf("%lld", &H);
	long long W;
	std::scanf("%lld", &W);
	long long N;
	std::scanf("%lld", &N);
	std::vector<long long> A(N);
	std::vector<long long> B(N);
	for (int i = 0; i < N; i++)
	{
		std::scanf("%lld", &A[i]);
		std::scanf("%lld", &B[i]);
	}
	solve(H, W, N, std::move(A), std::move(B));
	return 0;
}
