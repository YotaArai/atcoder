#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

vector<int> E[2010];

void solve(long long N, long long M, std::vector<long long> A, std::vector<long long> B)
{
	for (int i = 0; i < M; i++)
	{
		E[A[i] - 1].push_back(B[i] - 1);
	}

	ll ans = 0;

	for (int i = 0; i < N; i++)
	{
		queue<int> que;
		set<int> vis;

		que.push(i);
		vis.insert(i);

		while (!que.empty())
		{
			int cu = que.front();
			que.pop();
			for (auto to : E[cu])
			{
				if (!vis.count(to))
				{
					que.push(to);
					vis.insert(to);
				}
			}
		}
		ans += vis.size();
	}
	cout << ans << endl;
}

// Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long N;
	std::scanf("%lld", &N);
	long long M;
	std::scanf("%lld", &M);
	std::vector<long long> A(M);
	std::vector<long long> B(M);
	for (int i = 0; i < M; i++)
	{
		std::scanf("%lld", &A[i]);
		std::scanf("%lld", &B[i]);
	}
	solve(N, M, std::move(A), std::move(B));
	return 0;
}
