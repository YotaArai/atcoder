#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <atcoder/all>
using namespace std;
using namespace atcoder;
typedef long long ll;

const long long MOD = 998244353;
using mint = modint998244353;

mint dp[3001][3001];

void solve(long long N, std::vector<long long> a, std::vector<long long> b)
{
	for (int i = 0; i < 3001; i++)
	{
		for (int j = 0; j < 3001; j++)
		{
			dp[i][j] = 0;
		}
	}

	dp[0][0] = 1;

	for (int i = 0; i < N + 1; i++)
	{
		for (int j = 0; j < 3000; j++)
		{
			dp[i][j + 1] += dp[i][j];
		}
		for (int j = a[i]; j <= b[i]; j++)
		{
			dp[i + 1][j] += dp[i][j];
		}
	}

	cout << dp[N][3000].val() << endl;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	long long N;
	std::scanf("%lld", &N);
	std::vector<long long> a(N);
	for (int i = 0; i < N; i++)
	{
		std::scanf("%lld", &a[i]);
	}
	std::vector<long long> b(N);
	for (int i = 0; i < N; i++)
	{
		std::scanf("%lld", &b[i]);
	}
	solve(N, std::move(a), std::move(b));
	return 0;
}
