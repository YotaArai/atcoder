#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;
typedef long long ll;

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
	// Failed to predict input format
	long long N;
	std::scanf("%lld", &N);

	ll T[N], K[N];
	vector<std::vector<long long>> A;
	for (int i = 0; i < N; i++)
	{
		std::scanf("%lld", &T[i]);
		std::scanf("%lld", &K[i]);
		vector<ll> vectmp;
		A.push_back(vectmp);
		for (int j = 0; j < K[i]; j++)
		{
			ll atmp;
			cin >> atmp;
			A[i].push_back(atmp - 1);
		}
	}

	// for (int i = 0; i < N; i++)
	// {
	// 	cout << T[i] << " ";
	// 	cout << K[i] << " ";
	// 	for (int j = 0; j < K[i]; j++)
	// 	{
	// 		cout << A[i][j] << " ";
	// 	}
	// 	cout << endl;
	// }

	ll ans = 0;
	bool used[N];
	for (int i = 0; i < N; i++)
	{
		used[i] = false;
	}
	used[N - 1] = true;
	for (int i = N - 1; i >= 0; i--)
	{
		if (used[i])
		{
			ans += T[i];
			for (int j = 0; j < K[i]; j++)
			{
				used[A[i][j]] = true;
			}
		}
	}
	cout << ans << endl;
	return 0;
}
